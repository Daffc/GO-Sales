basePath: /
definitions:
  dto.LoginInputDTO:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.LoginOutputDTO:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      token:
        type: string
      updated_at:
        type: string
    type: object
  dto.UserInputDTO:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
  dto.UserOutputDTO:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a basic GO API example constructed for study purposes.
  license:
    url: https://www.gnu.org/licenses/lgpl-3.0.html
  title: GO Sales API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Logging User.
      parameters:
      - description: User credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.LoginInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginOutputDTO'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Logging User.
      tags:
      - Auth
  /users:
    get:
      consumes:
      - application/json
      description: List all non deleted users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.UserOutputDTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List all non deleted users.
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user.
      parameters:
      - description: User input data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UserInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new user.
      tags:
      - Users
  /users/{userId}:
    get:
      consumes:
      - application/json
      description: Recover user by userId.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserOutputDTO'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Recover user by userId.
      tags:
      - Users
schemes:
- http
swagger: "2.0"
